getwd()
library(devtools)
use_vignette("package_details")
library(FarsPackage)
library(FarsPackage)
library(devtools)
document()
devtools::use_testthat()
library(FarsPackage)
library(testthat)
test_that("make filname", {
year<-2014
expect_that(make_filename(year), is_a("string"))
})
x<-make_filename(2004)
test_that("make filname", {
year<-2014
expect_that(make_filename(year), is_a("integer"))
})
test_that("make filname", {
year<-2014
expect_that(make_filename(year), is_a("character"))
})
test_that("make filname", {
year<-2014
expect_that(year, is_a("character"))
})
library(FarsPackage)
fars_map_state(43, 2013)
getwd()
fars_map_state(43, 2013)
fars_map_state(20, 2013)
fars_map_state(11, 2013)
fars_map_state <- function(state.num, year) {
filename <- make_filename(year)
data <- fars_read(filename)
state.num <- as.integer(state.num)
if(!(state.num %in% unique(data$STATE)))
stop("invalid STATE number: ", state.num)
data.sub <- dplyr::filter(data, STATE == state.num)
if(nrow(data.sub) == 0L) {
message("no accidents to plot")
return(invisible(NULL))
}
is.na(data.sub$LONGITUD) <- data.sub$LONGITUD > 900
is.na(data.sub$LATITUDE) <- data.sub$LATITUDE > 90
with(data.sub, {
maps::map("state", ylim = range(LATITUDE, na.rm = TRUE),
xlim = range(LONGITUD, na.rm = TRUE))
graphics::points(LONGITUD, LATITUDE, pch = 46)
})
}
fars_map_state(11, 2013)
fars_map_state(10, 2014)
fars_map_state(43, 2013)
fars_map_state(13, 2013)
fars_map_state(13, 2013)
library(maps)
fars_map_state(11, 2013)
fars_map_state(15, 2013)
fars_map_state(12, 2013)
library(FarsPackage)
